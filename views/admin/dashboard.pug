extends ../layouts/basic

block content
    #content: .ui.container
        h1.ui.header Dashboard
        hr

        h2.ui.header Tournaments
        button.ui.button.green.opens-modal(data-target='#tournament-modal')
            i.icon.plus
            | New Tournament
        .spacer
        if (tournaments)
            .ui.grid
                each tournament in tournaments
                    .four.wide.column: .ui.card
                        .content
                            .header= tournament.name
                            .meta
                                span= tournament.date.toLocaleDateString('en-US')
                                span= tournament.city + ', ' + tournament.state
                            .description
                                p Proctor registration code:
                                code.center.aligned= tournament.joinCode

                        .extra.content: .ui.two.buttons
                            a.ui.button(href='/tournaments/manage/' + tournament._id) Manage
                            a.ui.button(href='#') Edit Details
        .ui.divider
        h2.ui.header 2017-18 Season Events
        button#new-event.ui.button.green.opens-modal(data-target='#event-modal')
            i.icon.plus
            | New Event
        #filter-view.ui.dropdown.labeled.icon.button
            input(type='hidden', name='filters')
            i.filter.icon
            span.text All Events
            .menu
                .item(data-value='all')  
                    | All Events
                .item(data-value='b')  
                    | B only
                .item(data-value='b-and-trials')
                    | B only + state/trials
                .item(data-value='c') 
                    | C only
                .item(data-value='c-and-trials') 
                    | C only + state/trials

        .spacer
        #events.ui.grid
            each event in events
                .four.wide.column(id=event._id): .ui.card
                    .content
                        .header= event.name
                        .description
                            if (event.category === 'bio')
                                .ui.tiny.green.label Biology
                            if (event.category === 'earth')
                                .ui.tiny.brown.label Earth/Space
                            if (event.category === 'phys/chem')
                                .ui.tiny.orange.label Physics/Chemistry
                            if (event.category === 'building')
                                .ui.tiny.violet.label Building
                            if (event.category === 'inquiry')
                                .ui.tiny.pink.label Inquiry
                            if (event.stateEvent)
                                .ui.tiny.teal.label State/Trial
                            each division in event.division
                                .ui.tiny.grey.label= division
                    .extra.content
                        a.ui.fluid.button.edit-event.opens-modal(data-eventid=event._id data-target='#event-modal') Edit

        
        include partials/_event-modal
        include ../tournaments/partials/_tournament-modal


block scripts
    script.
        const events = !{JSON.stringify(events)}
        const cardIds = []
        const $eventsDropdown = $('#events-dropdown')
        let matches;

        events.forEach(event => {
            cardIds.push(event._id)
        })

        $('.ui.dropdown').dropdown()

        // Bind button to show modal action
        $('.opens-modal').click( function() {
            $($(this).data('target')).modal('show')
        })

        $('#add-all-events').click(() => {
            $('#events-dropdown option').each( function() {
                $('#events-dropdown').dropdown('set selected', $(this).prop('value'))
            })
        })

        $('#add-b-only').click(() => {
            $eventsDropdown.dropdown('clear')
            matches = getBOnly()
            matches.forEach(match => {
                $eventsDropdown.dropdown('set selected', match._id)
            })
        })

        $('#add-b-and-trials').click(() => {
            $eventsDropdown.dropdown('clear')
            matches = getBAndTrials()
            matches.forEach(match => {
                $eventsDropdown.dropdown('set selected', match._id)
            })
        })

        $('#add-c-only').click(() => {
            $eventsDropdown.dropdown('clear')
            matches = getCOnly()
            matches.forEach(match => {
                $eventsDropdown.dropdown('set selected', match._id)
            })
        })

        $('#add-c-and-trials').click(() => {
            $eventsDropdown.dropdown('clear')
            matches = getCAndTrials()
            matches.forEach(match => {
                $eventsDropdown.dropdown('set selected', match._id)
            })
        })

        $('#clear-events').click(() => {
            $('#events-dropdown option').each( function() {
                $('#events-dropdown').dropdown('clear')
            })
        })

        // Populate event modal with event data on click
        $('.edit-event').click( function() {
            let $this = $(this)
            let eventData = events.find(event => event._id === $this.data('eventid'))

            // Populate data
            $('#event-modal .header').text('Editing event: ' + eventData.name)
            $('#name').val(eventData.name)
            $('#division-dropdown').dropdown('clear')
            $('#division-dropdown').dropdown('set selected', eventData.division)
            $('#category-dropdown').dropdown('set selected', eventData.category)
            $('#in-rotation').attr('checked', eventData.inRotation)
            $('#impound').attr('checked', eventData.impound)
            $('#state-event').attr('checked', eventData.stateEvent)
            $('#high-score-wins').attr('checked', eventData.highScoreWins)
            $('#resources').val(eventData.resources || '')
            $('#current-topic').val(eventData.topic || '')

            // Change form action
            $('#event-modal form').attr('action', '/events/' + eventData._id + '/edit')
        })

        // Change form action and clear fields when opening new team modal
        $('#new-event').click(() => {
            $('#event-modal .header').text('Create New Event')
            $('#name').val('')
            $('#division-dropdown').dropdown('clear')
            $('#in-rotation').attr('checked', false)
            $('#impound').attr('checked', false)
            $('#state-event').attr('checked', false)
            $('#high-score-wins').attr('checked', false)
            $('#current-topic').val('')
            $('#resources').val('')

            $('#event-modal form').attr('action', '/events/new')
        })

        $('#filter-view input').change( function() {
            switch($(this).val()) {
                case 'b':
                    matches = getBOnly()
                    events.forEach(event => {
                        if (matches.has(event))
                            $('#' + event._id).removeClass('hidden')
                        else
                            $('#' + event._id).addClass('hidden')
                    })
                    break;
                case 'b-and-trials':
                    matches = getBAndTrials()
                    events.forEach(event => {
                        if (matches.has(event))
                            $('#' + event._id).removeClass('hidden')
                        else
                            $('#' + event._id).addClass('hidden')
                    })
                    break;
                case 'c':
                    matches = getCOnly()
                    events.forEach(event => {
                        if (matches.has(event))
                            $('#' + event._id).removeClass('hidden')
                        else
                            $('#' + event._id).addClass('hidden')
                    })
                    break;
                case 'c-and-trials':
                    matches = getCAndTrials()
                    events.forEach(event => {
                        if (matches.has(event))
                            $('#' + event._id).removeClass('hidden')
                        else
                            $('#' + event._id).addClass('hidden')
                    })
                    break;
                case 'all':
                    cardIds.forEach(id => {
                        $('#' + id).removeClass('hidden')
                    })
                    break;
            }
        })


        const getBAndTrials = () => {
            return new Set(events.filter(event => event.division.includes('B')))
        }

        const getBOnly = () => {
            return new Set(events.filter(event => event.division.includes('B') && !event.stateEvent))
        }

        const getCAndTrials = () => {
            return new Set(events.filter(event => event.division.includes('C')))
        }

        const getCOnly = () => {
            return new Set(events.filter(event => event.division.includes('C') && !event.stateEvent))
        }